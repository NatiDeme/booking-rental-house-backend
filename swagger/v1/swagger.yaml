---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  "/login":
    post:
      summary: Login a user
      tags:
      - users
      parameters: []
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      name:
                        type: string
                      user_id:
                        type: integer
        '401':
          description: Login failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
              - username
              - password
  "/user_reservation":
    post:
      summary: create new reservation
      tags:
      - reservations
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Tour successfully created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                image:
                  type: string
                city:
                  type: string
                description:
                  type: string
                price:
                  type: float
                duration:
                  type: float
              required:
              - name
              - city
              - price
    get:
      summary: grab all tours
      tags:
      - tours
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Tours successfully grabbed
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    image:
                      type: string
                    city:
                      type: string
                    description:
                      type: string
                    price:
                      type: decimal
                    duration:
                      type: decimal
                  required:
                  - name
                  - city
                  - price
  "/tours/{id}":
    get:
      summary: retrieve a tour
      tags:
      - tours
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Tour successfully retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  image:
                    type: string
                  city:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                  duration:
                    type: number
  "/tours":
    post:
      summary: create new tour
      tags:
      - tours
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Tour successfully created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                image:
                  type: string
                city:
                  type: string
                description:
                  type: string
                price:
                  type: number
                duration:
                  type: number
              required:
              - name
              - city
              - price
    get:
      summary: grab all tours
      tags:
      - tours
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Tours successfully grabbed
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    image:
                      type: string
                    city:
                      type: string
                    description:
                      type: string
                    price:
                      type: number
                    duration:
                      type: number
                  required:
                  - name
                  - city
                  - price
  "/signup":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                username:
                  type: string
                email:
                  type: string
              required:
              - name
              - email
              - password
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
